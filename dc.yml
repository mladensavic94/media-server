version: '3.9'

networks:
  default:
    driver: bridge

########################### EXTENSION FIELDS
# Helps eliminate repetition of sections
 
# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
 
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always
 
# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped
 
# Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
  security_opt:
    - no-new-privileges:true
  restart: "no"
########################### SERVICES
services:

# Portainer - WebUI for Containers
  portainer:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports: # Comment out if using Nginx Proxy Manager to access portainer WebUI.
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy and comment this line out, for improved security.
      - $DOCKERDIR/appdata/portainer/data:/data # Change to local directory if you want to save/transfer config locally.
    environment:
      - TZ=$TZ

# Nginx Proxy Manager - Reverse Proxy with LetsEncrypt
  npm:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: nginx-proxy-manager
    image: 'jc21/nginx-proxy-manager:latest'
    ports:
      - '80:80' # Public HTTP Port. Port Forwarding on Router is ON.
      - '443:443' # Public HTTPS Port. Port Forwarding on Router is ON.
      - '81:81' # Admin Web Port. Port Forwarding on Router is OFF. Internal Home Network Access only - 192.168.89.254:81.
    volumes:
      - $DOCKERDIR/appdata/npm/config:/config 
      - $DOCKERDIR/appdata/npm/letsencrypt:/etc/letsencrypt
      - $DOCKERDIR/appdata/npm/data:/data
    environment:
      DB_SQLITE_FILE: "/config/database.sqlite"
      DISABLE_IPV6: 'true'

# Radarr - Movie management
  radarr:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/radarr:nightly # latest tag was causing "Error parsing column 45"
    container_name: radarr
    ports:
      - "7878:7878"
    volumes:
      - $DOCKERDIR/appdata/radarr:/config
      - $DATADIR/downloads/completed/radarr:/downloads # /downloads/completed is set by transmission /radarr/ is category on prowlarr setup. also add transmission-vpn /data/completed/radarr/ /downloads/ mapping in download clients
      - $DATADIR/media/movies:/bmedia # set /bmedia as media mgmt in settings 
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

# Sonarr - TV Shows management
  sonarr:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    ports:
      - "8989:8989"
    volumes:
      - $DOCKERDIR/appdata/sonarr:/config
      - $DATADIR/downloads/completed/sonarr:/downloads
      - $DATADIR/media/shows:/bmedia
      - $DATADIR/media/anime:/anime
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

# Bazarr - subtitle companion
  bazarr:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    ports:
      - 6767:6767
    volumes:
      - $DOCKERDIR/appdata/bazarr:/config
      - $DATADIR/media:/bmedia
    environment:
      <<: *default-tz-puid-pgid
      
# Prowlarr - Torrent proxy
  prowlarr:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    ports:
     - "9696:9696"
    volumes:
      - $DOCKERDIR/appdata/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-puid-pgid

# Kavita - ebook and comics Server
  kavita:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: kizaing/kavita:latest
    container_name: kavita
    ports:
      - "5000:5000"
    volumes:
      - $DOCKERDIR/appdata/kavita:/config
      - $DATADIR/reads:/reads

# Jellyfin - media server
  jellyfin:
    <<: *common-keys-media # See EXTENSION FIELDS at the top
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    ports:
      - "8096:8096"
    volumes:
      - $DOCKERDIR/appdata/jellyfin:/config
      - $DATADIR/media:/bmedia
      - $DATADIR/reads:/reads
      - /dev/shm:/data/transcode

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
          - LOG_LEVEL=debug
          - TZ=$TZ
    ports:
          - 5055:5055
    volumes:
          - $DOCKERDIR/appdata/jellyseerr:/app/config
    restart: unless-stopped
# TransmissionVPN
  transmission-vpn:
    container_name: transmission-vpn
    image: haugene/transmission-openvpn:latest
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: always
    ports:
      - "9091:9091"
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - $DOCKERDIR/appdata/transmission-vpn:/config
      - $DATADIR/downloads/completed:/data/completed
      - $DATADIR/downloads/incomplete:/data/incomplete
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      - OPENVPN_PROVIDER=PIA
      - OPENVPN_USERNAME=$OPENVPN_USERNAME
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60 --auth-nocache
      - OPENVPN_CONFIG=de_frankfurt
      - LOCAL_NETWORK=127.0.0.1
      - CREATE_TUN_DEVICE=true
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
      - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1"
      - TRANSMISSION_RPC_PASSWORD=tuki
      - TRANSMISSION_RPC_USERNAME=tuki
      - TRANSMISSION_UMASK=2
      - TRANSMISSION_RATIO_LIMIT=1
      - TRANSMISSION_RATIO_LIMIT_ENABLED=true
  # readarr:
    # container_name: readarr
    # image: ghcr.io/hotio/readarr
    # ports:
      # - "8787:8787"
    # environment:
      # - PUID=$PUID
      # - PGID=$PGID
      # - UMASK=002
      # - TZ=$TZ
    # volumes:
      # - $DOCKERDIR/appdata/readarr:/config
      # - $DATADIR/reads:/data
  # lazylibrarian:
    # image: lscr.io/linuxserver/lazylibrarian:latest
    # container_name: lazylibrarian
    # environment:
      # - PUID=$PUID
      # - PGID=$PGID
      # - TZ=$TZ
      # #- DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    # volumes:
      # - $DOCKERDIR/appdata/lazylibrarian:/config
      # - $DATADIR/downloads/completed/lazylibrarian:/downloads
      # - $DATADIR/reads:/books #optional
    # ports:
      # - 5299:5299
    # restart: unless-stopped

############################# MAINTENANCE & MONITORING
  dockergc:
    <<: *common-keys-apps # See EXTENSION FIELDS at the top
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy and comment this line for improved security.
      - $DOCKERDIR/appdata/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude # Create empty file
    environment:
      CRON: 0 0 0 * * ? # Everyday at midnight. Previously 0 0 * * *
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ

# WatchTower - Automatic Docker Container Updates
  watchtower:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    image: containrrr/watchtower
    container_name: watchtower
    ports:
     - 8780:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy and comment this line for improved security.
    environment:
      TZ: $TZ
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_REMOVE_VOLUMES: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "false"
      WATCHTOWER_SCHEDULE: "0 30 12 * * *" # Everyday at 12:30
      # DOCKER_HOST: tcp://socket-proxy:2375 # Use this if you have Socket Proxy enabled.
      DOCKER_API_VERSION: "1.40"
  speedtest:
    <<: *common-keys-core # See EXTENSION FIELDS at the top
    container_name: speedtest
    image: henrywhitaker3/speedtest-tracker
    ports:
     - 8765:80
    volumes:
     - $DOCKERDIR/appdata/speedtest:/config
    environment:
      <<: *default-tz-puid-pgid
      OOKLA_EULA_GDPR: true
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - $DOCKERDIR/appdata/homepage:/app/config # Make sure your local config directory exists
